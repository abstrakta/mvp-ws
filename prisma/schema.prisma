generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://abstrakta_dbuser_admin:abstrakta@Silence93!@localhost:5432/abstrakta_db"
}

model AssetBundle {
  id                Int               @id @default(autoincrement())
  idOfPortfolio     Int?
  dateCreated       DateTime          @default(now())
  dateUpdated       DateTime          @updatedAt
  assets            AssetDetails[]
  portfolio         AssetPortfolio?   @relation(fields: [idOfPortfolio], references: [id])
  publicationStatus PublicationStatus @default(DRAFT)
}

model AssetDetails {
  id                Int               @id @default(autoincrement())
  idOfBundle          Int?
  dateCreated       DateTime          @default(now())
  dateUpdated       DateTime          @updatedAt
  bundle            AssetBundle?      @relation(fields: [idOfBundle], references: [id])
  description       String
  title             String
  publicationStatus PublicationStatus @default(DRAFT)
}

model AssetPortfolio {
  id          Int           @id @default(autoincrement())
  idOfOwner     Int
  dateCreated DateTime      @default(now())
  dateUpdated DateTime      @updatedAt
  bundles     AssetBundle[]
  owner       User          @relation(fields: [idOfOwner], references: [id])
}

model Dao {
  id          Int         @id @default(autoincrement())
  dateCreated DateTime    @default(now())
  dateUpdated DateTime    @updatedAt
  members     DaoMember[]
  name        String
  status      DaoStatus   @default(ACTIVE)
}

model DaoMember {
  id          Int           @id @default(autoincrement())
  idOfDao     Int
  idOfMember  Int
  dateCreated DateTime      @default(now())
  dateUpdated DateTime      @updatedAt
  dao         Dao           @relation(fields: [idOfDao], references: [id])
  member      User          @relation(fields: [idOfMember], references: [id])
  memberRole  DaoMemberRole @default(ORDINARY)
}

enum DaoMemberRole {
  ADJUDICATOR
  MEDIATOR
  ORDINARY
}

enum DaoStatus {
  PROPOSED
  ACTIVE
  SUSPENDED
  ARCHIVED
}

enum PublicationStatus {
  DRAFT
  DRAFT_REVIEW
  LIVE_PUBLISHED
  LIVE_ARCHIVED
}

model User {
  id          Int              @id @default(autoincrement())
  dateCreated DateTime         @default(now())
  dateUpdated DateTime         @updatedAt
  email       String           @unique
  name        String?
  portfolios  AssetPortfolio[]
  DaoMember   DaoMember[]
}
